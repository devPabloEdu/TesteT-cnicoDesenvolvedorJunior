{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\TesteDesenvolvedorJunior\\\\frontend\\\\src\\\\Components\\\\MatriculaList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport MatriculaService from \"../Services/MatriculaService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MatriculaList = () => {\n  _s();\n  const [matriculas, setMatriculas] = useState([]); // Certifique-se de que o estado está configurado corretamente.\n\n  useEffect(() => {\n    const fetchMatriculas = async () => {\n      try {\n        const response = await MatriculaService.listarMatriculas(); // Supondo que você tenha uma função que faça a requisição.\n        setMatriculas(response.data); // Supondo que a resposta seja uma lista de matrículas.\n      } catch (error) {\n        console.error('Erro ao listar matrículas:', error);\n      }\n    };\n    fetchMatriculas();\n  }, []); // O array vazio faz com que o efeito execute apenas uma vez (após o primeiro render).\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Lista de Matr\\xEDculas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), matriculas.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"N\\xE3o h\\xE1 matr\\xEDculas registradas.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: matriculas.map((matricula, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [matricula.Aluno && matricula.Aluno.Nome ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Aluno: \", matricula.Aluno.Nome]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Aluno n\\xE3o encontrado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this), matricula.Curso && matricula.Curso.Nome ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Curso: \", matricula.Curso.Nome]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Curso n\\xE3o encontrado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(MatriculaList, \"wkrCh0VElJKVYQYaxYX/NC0yZ8w=\");\n_c = MatriculaList;\nexport default MatriculaList;\nvar _c;\n$RefreshReg$(_c, \"MatriculaList\");","map":{"version":3,"names":["React","useEffect","useState","MatriculaService","jsxDEV","_jsxDEV","MatriculaList","_s","matriculas","setMatriculas","fetchMatriculas","response","listarMatriculas","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","matricula","index","Aluno","Nome","Curso","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/TesteDesenvolvedorJunior/frontend/src/Components/MatriculaList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport MatriculaService from \"../Services/MatriculaService\";\r\n\r\nconst MatriculaList: React.FC = () => {\r\n  const [matriculas, setMatriculas] = useState<any[]>([]); // Certifique-se de que o estado está configurado corretamente.\r\n\r\n  useEffect(() => {\r\n    const fetchMatriculas = async () => {\r\n      try {\r\n        const response = await MatriculaService.listarMatriculas(); // Supondo que você tenha uma função que faça a requisição.\r\n        setMatriculas(response.data); // Supondo que a resposta seja uma lista de matrículas.\r\n      } catch (error) {\r\n        console.error('Erro ao listar matrículas:', error);\r\n      }\r\n    };\r\n\r\n    fetchMatriculas();\r\n  }, []); // O array vazio faz com que o efeito execute apenas uma vez (após o primeiro render).\r\n\r\n  return (\r\n    <div>\r\n      <h3>Lista de Matrículas</h3>\r\n      {matriculas.length === 0 ? (\r\n        <p>Não há matrículas registradas.</p>\r\n      ) : (\r\n        <ul>\r\n          {matriculas.map((matricula, index) => (\r\n            <li key={index}>\r\n              {/* Verifique se o objeto Aluno e Curso existem */}\r\n              {matricula.Aluno && matricula.Aluno.Nome ? (\r\n                <p>Aluno: {matricula.Aluno.Nome}</p>\r\n              ) : (\r\n                <p>Aluno não encontrado</p>\r\n              )}\r\n              {matricula.Curso && matricula.Curso.Nome ? (\r\n                <p>Curso: {matricula.Curso.Nome}</p>\r\n              ) : (\r\n                <p>Curso não encontrado</p>\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MatriculaList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,gBAAgB,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,aAAuB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAQ,EAAE,CAAC,CAAC,CAAC;;EAEzDD,SAAS,CAAC,MAAM;IACd,MAAMS,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,gBAAgB,CAACS,gBAAgB,CAAC,CAAC,CAAC,CAAC;QAC5DH,aAAa,CAACE,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;MAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAEDJ,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC3BZ,UAAU,CAACa,MAAM,KAAK,CAAC,gBACtBhB,OAAA;MAAAW,QAAA,EAAG;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAErCf,OAAA;MAAAW,QAAA,EACGR,UAAU,CAACc,GAAG,CAAC,CAACC,SAAS,EAAEC,KAAK,kBAC/BnB,OAAA;QAAAW,QAAA,GAEGO,SAAS,CAACE,KAAK,IAAIF,SAAS,CAACE,KAAK,CAACC,IAAI,gBACtCrB,OAAA;UAAAW,QAAA,GAAG,SAAO,EAACO,SAAS,CAACE,KAAK,CAACC,IAAI;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,gBAEpCf,OAAA;UAAAW,QAAA,EAAG;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAC3B,EACAG,SAAS,CAACI,KAAK,IAAIJ,SAAS,CAACI,KAAK,CAACD,IAAI,gBACtCrB,OAAA;UAAAW,QAAA,GAAG,SAAO,EAACO,SAAS,CAACI,KAAK,CAACD,IAAI;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,gBAEpCf,OAAA;UAAAW,QAAA,EAAG;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAC3B;MAAA,GAXMI,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACb,EAAA,CA1CID,aAAuB;AAAAsB,EAAA,GAAvBtB,aAAuB;AA4C7B,eAAeA,aAAa;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}