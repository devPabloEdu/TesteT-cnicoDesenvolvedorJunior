{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\TesteDesenvolvedorJunior\\\\frontend\\\\src\\\\Components\\\\MatriculaForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { alunoService } from '../Services/AlunoService';\nimport { cursoService } from '../Services/CursoService';\nimport { matriculaService } from '../Services/MatriculaService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MatriculaForm = ({\n  onSave\n}) => {\n  _s();\n  const [alunos, setAlunos] = useState([]);\n  const [cursos, setCursos] = useState([]);\n  const [selectedAlunoId, setSelectedAlunoId] = useState(null);\n  const [selectedCursos, setSelectedCursos] = useState([]);\n\n  // Carregar alunos e cursos ao montar o componente\n  useEffect(() => {\n    const fetchData = async () => {\n      const alunosData = await alunoService.listarAlunos();\n      const cursosData = await cursoService.listarCursos();\n      setAlunos(alunosData);\n      setCursos(cursosData);\n    };\n    fetchData();\n  }, []);\n\n  // Alterar cursos selecionados\n  const handleCursoChange = cursoId => {\n    setSelectedCursos(prevState => prevState.includes(cursoId) ? prevState.filter(id => id !== cursoId) : [...prevState, cursoId]);\n  };\n\n  // Realizar a matrícula\n  const handleMatricula = async e => {\n    e.preventDefault();\n    if (selectedAlunoId && selectedCursos.length > 0) {\n      await matriculaService.matricularAluno(selectedAlunoId, selectedCursos);\n      onSave(); // Notifica que a matrícula foi realizada\n    } else {\n      alert('Selecione um aluno e pelo menos um curso');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleMatricula,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Aluno:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedAlunoId !== null && selectedAlunoId !== void 0 ? selectedAlunoId : '',\n        onChange: e => setSelectedAlunoId(Number(e.target.value)),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Selecione um aluno\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), alunos.map(aluno => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: aluno.AlunoId,\n          children: aluno.Nome\n        }, aluno.AlunoId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Cursos:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), cursos.map(curso => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedCursos.includes(curso.CursoId),\n          onChange: () => handleCursoChange(curso.CursoId)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: curso.Nome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, curso.CursoId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Matricular\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(MatriculaForm, \"7i0CdQjYu8mSEVdQSgkQ8dMMj7Q=\");\n_c = MatriculaForm;\nexport default MatriculaForm;\nvar _c;\n$RefreshReg$(_c, \"MatriculaForm\");","map":{"version":3,"names":["React","useEffect","useState","alunoService","cursoService","matriculaService","jsxDEV","_jsxDEV","MatriculaForm","onSave","_s","alunos","setAlunos","cursos","setCursos","selectedAlunoId","setSelectedAlunoId","selectedCursos","setSelectedCursos","fetchData","alunosData","listarAlunos","cursosData","listarCursos","handleCursoChange","cursoId","prevState","includes","filter","id","handleMatricula","e","preventDefault","length","matricularAluno","alert","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","Number","target","map","aluno","AlunoId","Nome","curso","type","checked","CursoId","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/TesteDesenvolvedorJunior/frontend/src/Components/MatriculaForm.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { alunoService } from '../Services/AlunoService';\r\nimport { cursoService } from '../Services/CursoService';\r\nimport { matriculaService } from '../Services/MatriculaService';\r\n\r\nconst MatriculaForm: React.FC<{ onSave: () => void }> = ({ onSave }) => {\r\n  const [alunos, setAlunos] = useState<any[]>([]);\r\n  const [cursos, setCursos] = useState<any[]>([]);\r\n  const [selectedAlunoId, setSelectedAlunoId] = useState<number | null>(null);\r\n  const [selectedCursos, setSelectedCursos] = useState<number[]>([]);\r\n\r\n  // Carregar alunos e cursos ao montar o componente\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const alunosData = await alunoService.listarAlunos();\r\n      const cursosData = await cursoService.listarCursos();\r\n      setAlunos(alunosData);\r\n      setCursos(cursosData);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Alterar cursos selecionados\r\n  const handleCursoChange = (cursoId: number) => {\r\n    setSelectedCursos((prevState) =>\r\n      prevState.includes(cursoId)\r\n        ? prevState.filter((id) => id !== cursoId)\r\n        : [...prevState, cursoId]\r\n    );\r\n  };\r\n\r\n  // Realizar a matrícula\r\n  const handleMatricula = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (selectedAlunoId && selectedCursos.length > 0) {\r\n      await matriculaService.matricularAluno(selectedAlunoId, selectedCursos);\r\n      onSave(); // Notifica que a matrícula foi realizada\r\n    } else {\r\n      alert('Selecione um aluno e pelo menos um curso');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleMatricula}>\r\n      <div>\r\n        <label>Aluno:</label>\r\n        <select\r\n          value={selectedAlunoId ?? ''}\r\n          onChange={(e) => setSelectedAlunoId(Number(e.target.value))}\r\n        >\r\n          <option value=\"\">Selecione um aluno</option>\r\n          {alunos.map((aluno) => (\r\n            <option key={aluno.AlunoId} value={aluno.AlunoId}>\r\n              {aluno.Nome}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div>\r\n        <label>Cursos:</label>\r\n        {cursos.map((curso) => (\r\n          <div key={curso.CursoId}>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={selectedCursos.includes(curso.CursoId)}\r\n              onChange={() => handleCursoChange(curso.CursoId)}\r\n            />\r\n            <label>{curso.Nome}</label>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <button type=\"submit\">Matricular</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MatriculaForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}